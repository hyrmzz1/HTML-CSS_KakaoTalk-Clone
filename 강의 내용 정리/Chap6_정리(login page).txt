#6.0 - #6.9 CLONING TIMEEEEEEEEEEEEEEE

**단축키
! 쳐서 나오는 거 => document 생성
css 단축키 => link:css

리셋 css? 대부분의 tag에 margin:0 padding:0 border:0를 가진 css.
// 브라우저 스타일을 먼저 없애고 처음부터 디자인 하는 방법!
// 항상 먼저 설정하두고 작업하는게 좋다.
// reset.css 생성

import의 중요성!! css 파일 따로 만들고 styles.css 가장 상단에 @import "~~.css"; 해줘야함.
폰트의 경우 @import url("~~~~~~~~");

styles.css에는 font-family, reset.css, 상태바 등과 같이 모든 페이지(스크린)에 적용되어야 하는 것들 작성.
--------------------------------------------
<<02.png>>
BEM : 이름 짓는 방식. 코드를 쉽게 파악하기 위함.
ex) btn / btn__title / btn__title--open / btn__color
=> class나 id 이름에 적용하는 연습 계속 하기.

아이콘 추가 방법
- 직접 이미지 아이콘 추가
-SVG => script는 body태그 닫기 직전에 위치. body태그의 맨 아래에 !!!!
 1) Heroicons
 2) Font Awesome ✔
 -> 아이콘 이미지 머 복붙하면 <i~~~~~></i>	//아이콘 만들어짐!
 -> 아이콘 사이즈는 fa- 뒤에 적기. ex) fa-2x, fa-lg ... //lg는 1x보다 33% 크다.

font awesome 사용시 <body> 제일 아래에 
<script
	src="https://kit.fontawesome.com/6478f529f2.js"
	crossorigin="anonymous"
></script>
써주기.

버튼 만들 때 (Log In & Sign Up) <input type="submit" value="Log In" /> or <button>Log In</button>

font-family: ~; => 글꼴 설정 property. <body>에서 사용.
google font에서 다운받는 경우, 사용할 스타일만 다운받기.
link보다는 import 사용. import 위치는 제일 상단. 

상태바
display: flex;
justify-content: space-between;
css hack? like recipe. 이상한데 작동 잘됨.

welcome
text-align: center; 사용	//<h1>, <p> 같은 텍스트 다루는 태그 정렬시 사용.
page ruler redux extension -> 화면 px 측정
color zilla extension -> 스크린샷 통해 색상 따옴
text에도 width 적용 가능. 이건 글씨 들어가는 공간 제한
opacity: 0.7; => 회색된다.
만약 font-family에 기본 말고 다운받은 폰트 쓴다면 weight: ~~;엔 다운받은 두께만 쓸 수 있음.

login-form
margin 설정.
input들 그지같이 생김
=> space 주고(padding-top, padding-bottom, margin-bottom), border 없애고 (없앤 뒤 border-bottom 새로 작성)
, placeholder 색상 설정 (#login-form input::placeholder{}),  state 설정 (focus. //input 눌렀을 때 border-color)
border-radius: ~~;

css :not(){}	// "이것을 제외한 나머지에 적용하고 싶어요" 라는 의미이므로 중복되면 안되고 not에만 써야됨.

cursor: ~~;	//마우스 커서 모양 다르게 할 수 있음

BEM 사용한 방식과 그렇지 않은 방식 다 사용해보기.
--------------------------------------------
form의 중요한 두가지 attribute
action="~~.html"	//넘어갈 곳 설정. 다음 페이지. 어떤 페이지("~~~" 안)로 data를 보낼 것인지 지정
method="GET"
// GET과 POST 두가지 방식. POST는 백엔드 서버에 정보 전송하는 방식. 
// 여기선 서버 없어서 GET 사용. 보안 약함. 원래는 이걸로 id나 pw 보내면 안됨. (url에 노출되어도 상관없는 정보만 보냄.)
사용법) <form action="friends.html" method="get" id="login-form">	// 이거 id는 왜필요하더라?
--------------------------------------------
복습할 때 잘 안됐던 것
IN HTML
링크 넣는 태그는 <link>가 아니라 <a href="">화면에 보이는 문장. 누르면 href 링크로</a>

IN CSS
ID=> #id-name
Class=> .class-name

class 중 하나에 대한 설정?!?!
